// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using adduo.elephant.repositories;

namespace adduo.elephant.repositories.Migrations
{
    [DbContext(typeof(ElephantContext))]
    [Migration("20220214023618_AlterDebtTableAddCreatedAtField")]
    partial class AlterDebtTableAddCreatedAtField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("DebtTag", b =>
                {
                    b.Property<Guid>("DebtsId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("DebtsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("debts_tags");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.InCome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("incomes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Salário"
                        },
                        new
                        {
                            Id = 2,
                            Name = "VR"
                        });
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.SpreadSheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Year", "Month")
                        .IsUnique();

                    b.ToTable("spreadsheets");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.SpreadSheetItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("CurrentValue")
                        .HasColumnType("double");

                    b.Property<Guid>("ItemDebtId")
                        .HasColumnType("char(36)");

                    b.Property<double>("PayedValue")
                        .HasColumnType("double");

                    b.Property<Guid>("SpreadSheetId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemDebtId");

                    b.HasIndex("SpreadSheetId");

                    b.ToTable("spreadsheet_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.Debt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("debts");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.ItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.Debt");

                    b.Property<int>("DueDay")
                        .HasColumnType("int");

                    b.Property<int>("InComeId")
                        .HasColumnType("int");

                    b.HasIndex("InComeId");

                    b.ToTable("debt_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.Debt");

                    b.Property<Guid>("MonthyBundlerItemDebtId")
                        .HasColumnType("char(36)");

                    b.HasIndex("MonthyBundlerItemDebtId");

                    b.ToTable("debt_bundler_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.InstallmentsItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.ItemDebt");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.Property<int>("StartMonth")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.ToTable("debt_installment_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.MonthlyRecurrenceItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.ItemDebt");

                    b.ToTable("debt_monthly_recurrence_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.MonthyBundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.ItemDebt");

                    b.ToTable("debt_bundler_recurrence_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.PontualItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.ItemDebt");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("debt_pontual_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.YearlyRecurrenceItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.ItemDebt");

                    b.Property<int>("DueMonth")
                        .HasColumnType("int");

                    b.ToTable("debt_yearly_recurrence_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.InstallmentsBundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.Property<int>("StartMonth")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.ToTable("debt_bundler_installment_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.MonthlyRecurrenceBundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt");

                    b.ToTable("debt_bundler_monthly_recurrence_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.PontualBundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("debt_bundler_pontual_items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.YearlyRecurrenceBundlerItemDebt", b =>
                {
                    b.HasBaseType("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt");

                    b.Property<int>("DueMonth")
                        .HasColumnType("int");

                    b.ToTable("debt_bundler_yearly_recurrence_items");
                });

            modelBuilder.Entity("DebtTag", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.Debt", null)
                        .WithMany()
                        .HasForeignKey("DebtsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adduo.elephant.domain.entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.SpreadSheetItem", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", "ItemDebt")
                        .WithMany("SpreadSheetItems")
                        .HasForeignKey("ItemDebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adduo.elephant.domain.entities.SpreadSheet", "SpreadSheet")
                        .WithMany("Items")
                        .HasForeignKey("SpreadSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemDebt");

                    b.Navigation("SpreadSheet");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.ItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.Debt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.ItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adduo.elephant.domain.entities.InCome", "InCome")
                        .WithMany("ItemDebts")
                        .HasForeignKey("InComeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InCome");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.Debt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adduo.elephant.domain.entities.debts.MonthyBundlerItemDebt", "MonthyBundlerItemDebt")
                        .WithMany("BundlerItemDebts")
                        .HasForeignKey("MonthyBundlerItemDebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthyBundlerItemDebt");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.InstallmentsItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.InstallmentsItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.MonthlyRecurrenceItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.MonthlyRecurrenceItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.MonthyBundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.MonthyBundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.PontualItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.PontualItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.YearlyRecurrenceItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.ItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.YearlyRecurrenceItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.InstallmentsBundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.bundlers.InstallmentsBundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.MonthlyRecurrenceBundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.bundlers.MonthlyRecurrenceBundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.PontualBundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.bundlers.PontualBundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.bundlers.YearlyRecurrenceBundlerItemDebt", b =>
                {
                    b.HasOne("adduo.elephant.domain.entities.debts.bundlers.BundlerItemDebt", null)
                        .WithOne()
                        .HasForeignKey("adduo.elephant.domain.entities.debts.bundlers.YearlyRecurrenceBundlerItemDebt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.InCome", b =>
                {
                    b.Navigation("ItemDebts");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.SpreadSheet", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.ItemDebt", b =>
                {
                    b.Navigation("SpreadSheetItems");
                });

            modelBuilder.Entity("adduo.elephant.domain.entities.debts.MonthyBundlerItemDebt", b =>
                {
                    b.Navigation("BundlerItemDebts");
                });
#pragma warning restore 612, 618
        }
    }
}
